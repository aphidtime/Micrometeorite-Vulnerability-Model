#Support Vector Machine
import numpy as np #fixed
from sklearn.pipeline import make_pipeline #fixed
from sklearn.preprocessing import StandardScaler #fixed
from sklearn.svm import SVC #fixed
X = np.array([[-1, -1], [-2, -1], [1, 1], [2, 1]])# change to your data
y = np.array([1, 1, 2, 2]) # change to your data
clf = make_pipeline(StandardScaler(), SVC(gamma='auto'))#fixed
clf.fit(X, y) #fixed
print(clf.predict([[-0.8, -1]])) # make a prediction


# decision Tree Classifier
from sklearn import tree
import numpy as np #fixed
X = np.array([[-1, -1], [-2, -1], [1, 1], [2, 1]])# change to your data
y = np.array([1, 1, 2, 2]) # change to your data
clf = tree.DecisionTreeClassifier()#fixed
clf.fit(X, y) #fixed
print(clf.predict([[-0.8, -1]])) # make a prediction


function [y1] = myNeuralNetworkFunction(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 21-Mar-2022 15:38:46.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = Qx2 matrix, input #1
% and returns:
%   y = Qx1 matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0;0];
x1_step1.gain = [2;2];
x1_step1.ymin = -1;

% Layer 1
b1 = [4.4373003603139817841;3.192105401738712267;2.9517195937909863623;2.4471629589126093762;-0.48634534553846464622;0.6318262623016354107;1.7850680481432079638;-1.7222274412052775983;3.3925126778653273973;4.1586236644493190795];
IW1_1 = [-3.8125072716627359526 -3.694320391867281117;-1.1702122902271012705 4.6476783489829918139;-3.2917147409437292893 -2.3652079923628623881;-2.5102022216039365787 2.4402847544013064329;-4.2218733714149658809 1.9488851526263517577;0.91756317666741726846 4.1071784034286995535;4.1419159321991481093 1.9822552389443566234;-3.7506602684938763481 3.2619630978646227959;0.74886836734828521323 -4.4648484366730780692;2.5842223008366698167 -1.4811230878971988201];

% Layer 2
b2 = -0.97544927783966706158;
LW2_1 = [-1.1327929121845741189 -1.0180179924833441252 0.6838629461171570334 -0.25683984630473971622 0.13781469638547794165 1.755394467975450068 -0.17215904184400443455 0.12241158340126537252 0.37685973013106804919 1.6091428068888895542];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 2;
y1_step1.xoffset = 0;

% ===== SIMULATION ========

% Dimensions
Q = size(x1,1); % samples

% Input 1
x1 = x1';
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
y1 = y1';
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
